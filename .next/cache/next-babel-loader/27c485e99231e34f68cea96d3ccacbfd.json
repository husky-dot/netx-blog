{"ast":null,"code":"import fs, { promises as fsPromise } from 'fs';\nimport path from \"path\";\nimport matter from 'gray-matter';\nimport marked from 'marked';\nconst markdownDir = path.join(process.cwd(), 'markdown');\nexport const getPosts = async () => {\n  const fileNames = await fsPromise.readdir(markdownDir);\n  const posts = fileNames.map(fileName => {\n    const fullPath = path.join(markdownDir, fileName);\n    const id = fileName.replace(/\\.md$/, '');\n    console.log(fullPath);\n    const text = fs.readFileSync(fullPath, 'utf-8');\n    const {\n      data: {\n        title,\n        date\n      },\n      content\n    } = matter(text);\n    return {\n      id,\n      title,\n      date\n    };\n  });\n  return posts;\n};\nexport const getPost = async id => {\n  const fullPath = path.join(markdownDir, id + '.md');\n  const text = fs.readFileSync(fullPath, 'utf-8');\n  const {\n    data: {\n      title,\n      date\n    },\n    content\n  } = matter(text);\n  const htmlContent = marked(content);\n  return JSON.parse(JSON.stringify({\n    id,\n    title,\n    date,\n    content,\n    htmlContent\n  }));\n};\nexport const getPostIds = async () => {\n  const fileNames = await fsPromise.readdir(markdownDir);\n  return fileNames.map(fileName => fileName.replace(/\\.md$/g, ''));\n};","map":{"version":3,"sources":["D:/MyProject/netx-blog/lib/posts.tsx"],"names":["fs","promises","fsPromise","path","matter","marked","markdownDir","join","process","cwd","getPosts","fileNames","readdir","posts","map","fileName","fullPath","id","replace","console","log","text","readFileSync","data","title","date","content","getPost","htmlContent","JSON","parse","stringify","getPostIds"],"mappings":"AAAA,OAAOA,EAAP,IAAaC,QAAQ,IAAIC,SAAzB,QAAyC,IAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,WAAW,GAAGH,IAAI,CAACI,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,UAAzB,CAApB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAMC,SAAS,GAAG,MAAMT,SAAS,CAACU,OAAV,CAAkBN,WAAlB,CAAxB;AACA,QAAMO,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAeC,QAAQ,IAAI;AACvC,UAAMC,QAAQ,GAAGb,IAAI,CAACI,IAAL,CAAUD,WAAV,EAAuBS,QAAvB,CAAjB;AACA,UAAME,EAAE,GAAGF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,UAAMK,IAAI,GAAGrB,EAAE,CAACsB,YAAH,CAAgBN,QAAhB,EAA0B,OAA1B,CAAb;AACA,UAAM;AAACO,MAAAA,IAAI,EAAC;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAN;AAAqBC,MAAAA;AAArB,QAAiCtB,MAAM,CAACiB,IAAD,CAA7C;AAEA,WAAO;AACLJ,MAAAA,EADK;AACDO,MAAAA,KADC;AACMC,MAAAA;AADN,KAAP;AAGD,GAVa,CAAd;AAWA,SAAOZ,KAAP;AACD,CAdM;AAiBP,OAAO,MAAMc,OAAO,GAAG,MAAOV,EAAP,IAAsB;AAC3C,QAAMD,QAAQ,GAAGb,IAAI,CAACI,IAAL,CAAUD,WAAV,EAAuBW,EAAE,GAAG,KAA5B,CAAjB;AACA,QAAMI,IAAI,GAAGrB,EAAE,CAACsB,YAAH,CAAgBN,QAAhB,EAA0B,OAA1B,CAAb;AACA,QAAM;AAACO,IAAAA,IAAI,EAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAN;AAAqBC,IAAAA;AAArB,MAAiCtB,MAAM,CAACiB,IAAD,CAA7C;AACA,QAAMO,WAAW,GAAGvB,MAAM,CAACqB,OAAD,CAA1B;AACA,SAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAC/Bd,IAAAA,EAD+B;AAC3BO,IAAAA,KAD2B;AACpBC,IAAAA,IADoB;AACdC,IAAAA,OADc;AACLE,IAAAA;AADK,GAAf,CAAX,CAAP;AAGD,CARM;AAUP,OAAO,MAAMI,UAAU,GAAG,YAAY;AACpC,QAAMrB,SAAS,GAAG,MAAMT,SAAS,CAACU,OAAV,CAAkBN,WAAlB,CAAxB;AACA,SAAOK,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAIA,QAAQ,CAACG,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAA1B,CAAP;AACD,CAHM","sourcesContent":["import fs, { promises as fsPromise} from 'fs'\r\nimport path from \"path\";\r\nimport matter from 'gray-matter';\r\nimport marked from 'marked'\r\n\r\nconst markdownDir = path.join(process.cwd(), 'markdown');\r\n\r\nexport const getPosts = async () => {\r\n  const fileNames = await fsPromise.readdir(markdownDir)\r\n  const posts = fileNames.map( fileName => {\r\n    const fullPath = path.join(markdownDir, fileName)\r\n    const id = fileName.replace(/\\.md$/, '')\r\n    console.log(fullPath)\r\n    const text = fs.readFileSync(fullPath, 'utf-8')\r\n    const {data:{title, date}, content } = matter(text)\r\n\r\n    return {\r\n      id, title, date\r\n    }\r\n  })\r\n  return posts\r\n}\r\n\r\n\r\nexport const getPost = async (id: string) => {\r\n  const fullPath = path.join(markdownDir, id + '.md')\r\n  const text = fs.readFileSync(fullPath, 'utf-8')\r\n  const {data:{title, date}, content } = matter(text)\r\n  const htmlContent = marked(content)\r\n  return JSON.parse(JSON.stringify({\r\n    id, title, date, content, htmlContent\r\n  }))\r\n}\r\n\r\nexport const getPostIds = async () => {\r\n  const fileNames = await fsPromise.readdir(markdownDir)\r\n  return fileNames.map(fileName => fileName.replace(/\\.md$/g, ''))\r\n}"]},"metadata":{},"sourceType":"module"}