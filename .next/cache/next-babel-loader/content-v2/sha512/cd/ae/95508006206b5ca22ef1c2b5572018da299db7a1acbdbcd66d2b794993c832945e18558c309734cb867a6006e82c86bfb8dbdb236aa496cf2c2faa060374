{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProject\\\\netx-blog\\\\pages\\\\index.tsx\";\nimport { UAParser } from 'ua-parser-js';\nimport { useState, useEffect } from 'react';\n\nconst index = props => {\n  console.log(props);\n  const {\n    0: width,\n    1: setWidth\n  } = useState(0);\n  useEffect(() => {\n    return () => {\n      const w = document.documentElement.clientWidth;\n      setWidth(w);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u4F60\\u7684\\u6D4F\\u89C8\\u5668\\u662F \", props.browser.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u4F60\\u7684\\u6D4F\\u89C8\\u5668\\u662F \", width, \"px\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nexport default index;\nexport const getServerSideProps = async context => {\n  const ua = context.req.headers['user-agent'];\n  const result = new UAParser(ua).getResult();\n  return {\n    props: {\n      browser: result.browser\n    }\n  };\n};","map":{"version":3,"sources":["D:/MyProject/netx-blog/pages/index.tsx"],"names":["UAParser","useState","useEffect","index","props","console","log","width","setWidth","w","document","documentElement","clientWidth","browser","name","getServerSideProps","context","ua","req","headers","result","getResult"],"mappings":";;AAEA,SAAQA,QAAR,QAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAUA,MAAMC,KAAsB,GAAIC,KAAD,IAAW;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,YAAMO,CAAC,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAAnC;AACAJ,MAAAA,QAAQ,CAACC,CAAD,CAAR;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,0DAAYL,KAAK,CAACS,OAAN,CAAcC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,0DAAYP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;AAgBA,eAAeJ,KAAf;AAEA,OAAO,MAAMY,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,QAAMC,EAAE,GAAGD,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoB,YAApB,CAAX;AACA,QAAMC,MAAM,GAAG,IAAIpB,QAAJ,CAAaiB,EAAb,EAAiBI,SAAjB,EAAf;AACA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAEO,MAAM,CAACP;AADX;AADF,GAAP;AAKD,CARM","sourcesContent":["\r\nimport { GetServerSideProps, NextPage } from 'next'\r\nimport {UAParser} from 'ua-parser-js'\r\nimport { useState, useEffect } from 'react'\r\n\r\ntype Props = {\r\n  browser: {\r\n    name: string,\r\n    version: string;\r\n    major: string\r\n  }\r\n}\r\n\r\nconst index: NextPage<Props> = (props) => {\r\n  console.log(props)\r\n  const [width, setWidth] = useState(0)\r\n  useEffect(() => {\r\n    return () => {\r\n      const w = document.documentElement.clientWidth\r\n      setWidth(w)\r\n    };\r\n  }, [])\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>你的浏览器是 {props.browser.name}</h1>\r\n      <h1>你的浏览器是 {width}px</h1>\r\n    </div>\r\n  )\r\n}\r\nexport default index\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n  const ua = context.req.headers['user-agent']\r\n  const result = new UAParser(ua).getResult()\r\n  return {\r\n    props: {\r\n      browser: result.browser\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}