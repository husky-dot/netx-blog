{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyProject\\\\netx-blog\\\\pages\\\\posts\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\n\nvar PostsIndex = function PostsIndex() {\n  _s();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isEmpty = _useState3[0],\n      setIsEmpty = _useState3[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    axios.get('/api/v1/posts').then(function (response) {\n      setPosts(response.data);\n      setIsLoading(false);\n\n      if (response.data.length === 0) {\n        setIsEmpty(true);\n      }\n    })[\"catch\"](function () {\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6587\\u7AE0\\u5217\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u52A0\\u8F7D\\u4E2D..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, _this) : isEmpty ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u6CA1\\u6709\\u6587\\u7AE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, _this) : posts.map(function (p) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: p.id\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostsIndex, \"b2YKnqD7FH24ivVm7m3n8zm5SQo=\");\n\n_c = PostsIndex;\nexport default PostsIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsIndex\");","map":{"version":3,"sources":["D:/MyProject/netx-blog/pages/posts/index.tsx"],"names":["axios","useEffect","useState","PostsIndex","posts","setPosts","isLoading","setIsLoading","isEmpty","setIsEmpty","get","then","response","data","length","map","p","id"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAQA,IAAMC,UAAmB,GAAG,SAAtBA,UAAsB,GAAM;AAAA;;AAAA,kBACND,QAAQ,CAAS,EAAT,CADF;AAAA,MACzBE,KADyB;AAAA,MAClBC,QADkB;;AAAA,mBAEEH,QAAQ,CAAC,KAAD,CAFV;AAAA,MAEzBI,SAFyB;AAAA,MAEdC,YAFc;;AAAA,mBAGFL,QAAQ,CAAC,KAAD,CAHN;AAAA,MAGzBM,OAHyB;AAAA,MAGhBC,UAHgB;;AAIhCR,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAP,IAAAA,KAAK,CAACU,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgC,UAAAC,QAAQ,EAAI;AAC1CP,MAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAV,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAIK,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAND,WAMS,YAAM;AACbF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD;AASD,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGID,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GACTE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GACPJ,KAAK,CAACW,GAAN,CAAU,UAAAC,CAAC;AAAA,0BAAI;AAAA,kBACZA,CAAC,CAACC;AADU,SAAUD,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,eAAJ;AAAA,KAAX,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA5BD;;GAAMd,U;;KAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import { NextPage } from \"next\";\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from \"react\";\r\n\r\ntype Post = {\r\n  id: string,\r\n  date: string,\r\n  title: string\r\n}\r\n\r\nconst PostsIndex:NextPage = () => {\r\n  const [posts, setPosts] = useState<Post[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isEmpty, setIsEmpty] = useState(false)\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    axios.get('/api/v1/posts').then(response => {\r\n      setPosts(response.data)\r\n      setIsLoading(false)\r\n      if (response.data.length === 0) {\r\n        setIsEmpty(true)\r\n      }\r\n    }).catch(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>文章列表</h1>\r\n      {\r\n        isLoading ? <div>加载中..</div> :\r\n        isEmpty ? <div>没有文章</div>:\r\n        posts.map(p => <div key={p.id}>\r\n          {p.id}\r\n        </div>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsIndex;"]},"metadata":{},"sourceType":"module"}