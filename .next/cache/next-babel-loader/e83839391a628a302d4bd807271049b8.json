{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\netx-blog\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getPost, getPostIds } from \"lib/posts\";\n\nconst postsShow = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, post.title), __jsx(\"article\", {\n    dangerouslySetInnerHTML: {\n      __html: post.htmlContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default postsShow;\nexport const getStaticPaths = async () => {\n  const idList = await getPostIds();\n  idList.map(id => ({\n    params: {\n      id\n    }\n  }));\n  return {\n    paths: idList.map(id => ({\n      params: {\n        id\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async x => {\n  const id = x.params.id;\n  const post = await getPost(id);\n  return {\n    props: {\n      post: post\n    }\n  };\n};","map":{"version":3,"sources":["D:/MyProject/netx-blog/pages/posts/[id].tsx"],"names":["getPost","getPostIds","postsShow","props","post","title","__html","htmlContent","getStaticPaths","idList","map","id","params","paths","fallback","getStaticProps","x"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,WAApC;;AAMA,MAAMC,SAAyB,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAV,CADF,EAEE;AAAS,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEF,IAAI,CAACG;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CATD;;AAWA,eAAeL,SAAf;AAEA,OAAO,MAAMM,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMR,UAAU,EAA/B;AACAQ,EAAAA,MAAM,CAACC,GAAP,CAAWC,EAAE,KAAK;AAAEC,IAAAA,MAAM,EAAE;AAACD,MAAAA;AAAD;AAAV,GAAL,CAAb;AACA,SAAO;AACLE,IAAAA,KAAK,EAAEJ,MAAM,CAACC,GAAP,CAAWC,EAAE,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAACD,QAAAA;AAAD;AAAV,KAAL,CAAb,CADF;AAELG,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAPM;AASP,OAAO,MAAMC,cAAc,GAAG,MAAOC,CAAP,IAAiB;AAC7C,QAAML,EAAE,GAAGK,CAAC,CAACJ,MAAF,CAASD,EAApB;AACA,QAAMP,IAAI,GAAG,MAAMJ,OAAO,CAACW,EAAD,CAA1B;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEA;AADD;AADF,GAAP;AAKD,CARM","sourcesContent":["import { getPost, getPostIds } from \"lib/posts\";\r\nimport { NextPage } from \"next\";\r\n\r\ntype Props = {\r\n  post: Post\r\n}\r\nconst postsShow:NextPage<Props> = (props) => {\r\n  const {post} = props;\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <article dangerouslySetInnerHTML={{__html: post.htmlContent}}>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default postsShow;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const idList = await getPostIds()\r\n  idList.map(id => ({ params: {id}}))\r\n  return {\r\n    paths: idList.map(id => ({ params: {id}})),\r\n    fallback: false\r\n  }\r\n}\r\n\r\nexport const getStaticProps = async (x:any) => {\r\n  const id = x.params.id\r\n  const post = await getPost(id)\r\n  return {\r\n    props: {\r\n      post: post\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}